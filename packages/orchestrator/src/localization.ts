/* eslint-disable @typescript-eslint/no-namespace */
/**
 * All localized strings.
 */
export namespace LocalizedStrings {
    /**
     * Localized strings for the orchestrator module.
     */
    export const Orchestrator = {
        CreateFromVariableHistoryItemDescription: "Loaded variable '{0}' from kernel state",
        CreateFromFileUriHistoryItemDescription: "Loaded variable '{0}' from URI: {1}",
        OperationCategoryFormulas: "Formulas",
        OperationCategorySchema: "Schema",
        OperationCategoryFindAndReplace: "Find and replace",
        OperationCategoryFormat: "Format",
        OperationCategorySortAndFilter: "Sort and filter",
        OperationCategoryNumeric: "Numeric",
        OperationChangeType: "Change column type",
        OperationChangeTypeHelpText: "Change the data type of the targeted columns.",
        OperationChangeTypeDescription: "Change column type to {1} for column: {0}",
        OperationChangeTypeDescriptionPlural: "Change column type to {1} for columns: {0}",
        OperationChangeTypeArgsTargetType: "New type",
        OperationChangeTypeArgsReplacementForMissingValues: "Replacement for missing values",
        OperationChangeTypeWarningNoEquivalentType: "Equivalent translation for type '{0}' does not exist",
        OperationChangeTypeWarningMissingUnsignedType:
            "Could not convert to unsigned type, instead converted to a signed type",
        OperationChangeTypeWarningMissingBitsForType: "Could not convert to the specified bits for type",
        OperationClone: "Clone column",
        OperationCloneHelpText: "Creates a copy of a column.",
        OperationCloneDescription: "Clone column {0} as {1}",
        OperationCloneArgsNewColumnName: "Name for new column",
        OperationDescribeYourOperation: "Describe your operation",
        OperationDescribeYourOperationHelpText: "Generate code using a natural language prompt.",
        OperationDescribeYourOperationDescriptionNullCharacter: "Removed NULL characters. {0}",
        OperationDescribeYourOperationArgsPrompt: "Prompt",
        OperationDescribeYourOperationArgsPromptPlaceholder:
            "Example: Fill all missing values with the most common value",
        OperationDescribeYourOperationArgsPromptMissingError: "A prompt is required for this operation.",
        OperationDescribeYourOperationErrorNoCodeGenerated: "No code generated",
        OperationStringTransformByExample: "String transform by example",
        OperationStringTransformByExampleHelpText:
            "Automatically perform string transformations when a pattern is detected from the examples you provide. Powered by Microsoft Flash Fill.",
        OperationDateTimeFormattingByExample: "DateTime formatting by example",
        OperationDateTimeFormattingByExampleHelpText:
            "Automatically perform DateTime formatting when a pattern is detected from the examples you provide. Powered by Microsoft Flash Fill.",
        OperationArithmeticByExample: "Arithmetic by example",
        OperationArithmeticByExampleHelpText:
            "Automatically perform arithmetic when a pattern is detected from the examples you provide. Powered by Microsoft Flash Fill.",
        OperationNewColumnByExample: "New column by example",
        OperationNewColumnByExampleHelpText:
            "Automatically create a column when a pattern is detected from the examples you provide. Powered by Microsoft Flash Fill.",
        OperationFlashFillDescription: "Derive column {1} from column: {0}",
        OperationFlashFillDescriptionPlural: "Derive column {1} from columns: {0}",
        OperationFlashFillArgsDerivedColumnName: "Derived column name",
        OperationDrop: "Drop columns",
        OperationDropHelpText: "Removes the targeted columns from the data frame.",
        OperationDropDescription: "Drop column: {0}",
        OperationDropDescriptionPlural: "Drop columns: {0}",
        OperationDropDuplicates: "Drop duplicate rows",
        OperationDropDuplicatesHelpText:
            "Drops duplicate rows. Duplicate rows are identified using the selected columns only.",
        OperationDropDuplicatesDescription: "Drop duplicate rows in column: {0}",
        OperationDropDuplicatesDescriptionPlural: "Drop duplicate rows in columns: {0}",
        OperationDropDuplicatesAllColumnsDescription: "Drop duplicate rows across all columns",
        OperationCustomOperation: "Custom operation",
        OperationCustomOperationDefaultDescription: "Custom operation",
        OperationCustomOperationHelpText:
            "Use custom code to modify the dataframe. Note that `{0}` will be the variable for both the input and output of your code. You may modify the data frame directly or use `{0} = ...`",
        OperationDropNa: "Drop missing values",
        OperationDropNaHelpText: "Drop rows with missing values in the targeted columns.",
        OperationDropNaDescription: "Drop rows with missing data in column: {0}",
        OperationDropNaDescriptionPlural: "Drop rows with missing data in columns: {0}",
        OperationDropNaAllColumnsDescription: "Drop rows with missing data across all columns",
        OperationFillNa: "Fill missing values",
        OperationFillNaHelpText: "Fill missing values in the targeted columns.",
        OperationFillNaDescription: "Replace missing values with {1} in column: {0}",
        OperationFillNaDescriptionPlural: "Replace missing values with {1} in columns: {0}",
        OperationFillNaDescriptionMean: "Replace missing values with the mean of each column in: {0}",
        OperationFillNaDescriptionMedian: "Replace missing values with the median of each column in: {0}",
        OperationFillNaDescriptionMode: "Replace missing values with the mode of each column in: {0}",
        OperationFillNaDescriptionModeNonNumeric:
            "Replace missing values with the most common value of each column in: {0}",
        OperationFillNaMethodDescriptionBfill: "Replace gaps back from the next valid value in: {0}",
        OperationFillNaMethodDescriptionFfill: "Replace gaps forward from the previous valid value in: {0}",
        OperationFillNaArgsFillMethod: "Fill method",
        OperationFillNaArgsMethodMean: "Mean",
        OperationFillNaArgsMethodMedian: "Median",
        OperationFillNaArgsMethodMode: "Mode",
        OperationFillNaArgsMethodModeNonNumeric: "Most common value",
        OperationFillNaArgsMethodBfill: "Propagate backward",
        OperationFillNaArgsMethodFfill: "Propagate forward",
        OperationFillNaArgsCustom: "Custom value",
        OperationFillNaWarningPySparkMedian: "The median in PySpark is approximated for performance reasons.",
        OperationFilter: "Filter",
        OperationFilterHelpText: "Filters rows based on one or more conditions.",
        OperationFilterDescription: "Filter rows based on column: {0}",
        OperationFilterDescriptionPlural: "Filter rows based on columns: {0}",
        OperationFilterArgsSelectCondition: "Select a condition",
        OperationFilterArgsAddCondition: "Add condition",
        OperationFilterArgsMatchCase: "Match case",
        OperationFilterArgsConditionEqualTo: "Equal to",
        OperationFilterArgsConditionNotEqualTo: "Not equal to",
        OperationFilterArgsConditionGreaterThan: "Greater than",
        OperationFilterArgsConditionGreaterThanOrEqualTo: "Greater than or equal to",
        OperationFilterArgsConditionLessThan: "Less than",
        OperationFilterArgsConditionLessThanOrEqualTo: "Less than or equal to",
        OperationFilterArgsConditionIsMissing: "Is missing",
        OperationFilterArgsConditionIsNotMissing: "Is not missing",
        OperationFilterArgsConditionIsTrue: "Is true",
        OperationFilterArgsConditionIsFalse: "Is false",
        OperationFilterArgsConditionStartsWith: "Starts with",
        OperationFilterArgsConditionEndsWith: "Ends with",
        OperationFilterArgsConditionContains: "Contains",
        OperationFilterArgsConditionNotContains: "Does not contain",
        OperationFilterArgsConditionJoinAnd: "And",
        OperationFilterArgsConditionJoinOr: "Or",
        OperationOneHotEncode: "One-hot encode",
        OperationOneHotEncodeHelpText:
            "Split categorical data into a new column for each category, where each new column contains a 1 in rows that match that category, and 0 otherwise.",
        OperationOneHotEncodeDescription: "One-hot encode column: {0}",
        OperationOneHotEncodeDescriptionPlural: "One-hot encode columns: {0}",
        OperationOneHotEncodeArgsEncodeMissingValues: "Encode missing values",
        OperationMultiLabelTextBinarizer: "Multi-label binarizer",
        OperationMultiLabelTextBinarizerHelpText:
            "Split categorical data into a new column for each category using a text split delimiter, where each new column contains a 1 in rows that match that category, and 0 otherwise.",
        OperationMultiLabelTextBinarizerDescription: "Multi-label encode column {0} using delimiter {1}",
        OperationMultiLabelTextBinarizerDescriptionPlural: "Multi-label encode columns {0} using delimiter {1}",
        OperationMultiLabelTextBinarizerArgsDelimiter: "Delimiter",
        OperationMultiLabelTextBinarizerArgsPrefix: "Column name prefix",
        OperationScale: "Scale min/max values",
        OperationScaleHelpText:
            "Scales all numerical values in the targeted columns between a new minimum and maximum value.",
        OperationScaleDescription: "Scale column {0} between {1} and {2}",
        OperationScaleDescriptionPlural: "Scale columns {0} between {1} and {2}",
        OperationScaleArgsNewMinimum: "New minimum",
        OperationScaleArgsNewMaximum: "New maximum",
        OperationSort: "Sort values",
        OperationSortHelpText: "Sort the data according to one or more columns.",
        OperationSortDescription: "Sort by column: {0}",
        OperationSortDescriptionPlural: "Sort by columns: {0}",
        OperationSortDescriptionAscendingLabel: "{0} (ascending)",
        OperationSortDescriptionDescendingLabel: "{0} (descending)",
        OperationSortOrderAscending: "Ascending",
        OperationSortOrderDescending: "Descending",
        OperationSortArgsAddColumn: "Add column",
        OperationSortArgsMissingValuesFirst: "Missing values first",
        OperationSortArgsAdditionalColumns: "Additional columns",
        OperationSortArgsColumnName: "Column name",
        OperationSortArgsSortOrder: "Sort order",
        OperationSortAscending: "Sort ascending",
        OperationSortDescending: "Sort descending",
        OperationRename: "Rename column",
        OperationRenameHelpText: "Change the name of the target column.",
        OperationRenameDescription: "Rename column {0} to {1}",
        OperationRenameArgsNewColumnName: "New column name",
        OperationReplaceAll: "Find and replace",
        OperationReplaceAllHelpText: "Replaces all occurrences of an old value with a new value.",
        OperationReplaceAllDescription: "Replace all instances of {1} with {2} in column: {0}",
        OperationReplaceAllDescriptionPlural: "Replace all instances of {1} with {2} in columns: {0}",
        OperationReplaceAllArgsOldValue: "Old value",
        OperationReplaceAllArgsNewValue: "New value",
        OperationReplaceAllMatchFullString: "Match full string",
        OperationReplaceAllMatchCase: "Match case",
        OperationReplaceAllUseRegEx: "Use regular expression",
        OperationRoundDecimals: "Round",
        OperationRoundDecimalsHelpText: "Rounds numbers to the specified number of decimal places.",
        OperationRoundDecimalsDescription: "Round column {0} (Number of decimals: {1})",
        OperationRoundDecimalsDescriptionPlural: "Round columns {0} (Number of decimals: {1})",
        OperationRoundDecimalsArgsDecimals: "Number of decimals",
        OperationRoundDown: "Round down (floor)",
        OperationRoundDownHelpText: "Rounds numbers down to the nearest integer.",
        OperationRoundDownDescription: "Round down column {0}",
        OperationRoundDownDescriptionPlural: "Round down columns {0}",
        OperationRoundUp: "Round up (ceiling)",
        OperationRoundUpHelpText: "Rounds numbers up to the nearest integer.",
        OperationRoundUpDescription: "Round up column {0}",
        OperationRoundUpDescriptionPlural: "Round up columns {0}",
        OperationSplitText: "Split text",
        OperationSplitTextHelpText: "Splits a text column into several columns based on the input value.",
        OperationSplitTextDescriptionString: "Split text using string '{0}' in column: {1}",
        OperationSplitTextDescriptionStringPlural: "Split text using string '{0}' in columns: {1}",
        OperationSplitTextDescriptionRegex: "Split text using regex '{0}' in column: {1}",
        OperationSplitTextDescriptionRegexPlural: "Split text using regex '{0}' in columns: {1}",
        OperationSplitTextArgsDelimiter: "Delimiter",
        OperationSplitTextArgsRegularExpression: "Use regular expression",
        OperationStripText: "Strip whitespace",
        OperationStripTextHelpText: "Removes leading and trailing whitespace in a text column.",
        OperationStripTextDescription: "Remove leading and trailing whitespace in column: {0}",
        OperationStripTextDescriptionPlural: "Remove leading and trailing whitespace in columns: {0}",
        OperationStripTextDescriptionLeft: "Remove leading whitespace in column: {0}",
        OperationStripTextDescriptionLeftPlural: "Remove leading whitespace in columns: {0}",
        OperationStripTextDescriptionRight: "Remove trailing whitespace in column: {0}",
        OperationStripTextDescriptionRightPlural: "Remove trailing whitespace in columns: {0}",
        OperationStripTextArgsRemoveLeadingSpaces: "Remove leading whitespace",
        OperationStripTextArgsRemoveTrailingSpaces: "Remove trailing whitespace",
        OperationConvertToLowercase: "Convert text to lowercase",
        OperationConvertToLowercaseHelpText: "Convert text to lowercase in a text column.",
        OperationConvertToLowercaseDescription: "Convert text to lowercase in column: {0}",
        OperationConvertToLowercaseDescriptionPlural: "Convert text to lowercase in columns: {0}",
        OperationConvertToUppercase: "Convert text to uppercase",
        OperationConvertToUppercaseHelpText: "Convert text to uppercase in a text column.",
        OperationConvertToUppercaseDescription: "Convert text to uppercase in column: {0}",
        OperationConvertToUppercaseDescriptionPlural: "Convert text to uppercase in columns: {0}",
        OperationCalculateTextLength: "Calculate text length",
        OperationCalculateTextLengthHelpText:
            "Create new column with values equal to the length of each string value in a text column.",
        OperationCalculateTextLengthDescription: "Calculated text length from column: {0}",
        OperationCalculateTextLengthArgsNewColumnName: "New column name",
        OperationConvertToCapitalCase: "Convert text to capital case",
        OperationConvertToCapitalCaseHelpText: "Capitalize the first character of a string.",
        OperationConvertToCapitalCaseDescription: "Convert text to capital case in column: {0}",
        OperationConvertToCapitalCaseDescriptionPlural: "Convert text to capital case in columns: {0}",
        OperationConvertToCapitalCaseArgsCapitalizeWords: "Capitalize all words",
        OperationGroupByAndAggregate: "Group by and aggregate",
        OperationGroupByAndAggregateArgTarget: "Columns to group by",
        OperationGroupByAndAggregateHelpText: "Group the target columns to perform aggregation operations.",
        OperationGroupByAndAggregateDescription: "Performed {0} grouped on column: {1}",
        OperationGroupByAndAggregateDescriptionPlural: "Performed {0} grouped on columns: {1}",
        OperationGroupByAndAggregateDescriptionAggregation: "1 aggregation",
        OperationGroupByAndAggregateDescriptionAggregationPlural: "{0} aggregations",
        OperationGroupByAndAggregateArgsAggregations: "Aggregations",
        OperationGroupByAndAggregateArgsAggregationsAddAggregation: "Add aggregation",
        OperationGroupByAndAggregateArgsAggregationTarget: "Column to aggregate",
        OperationGroupByAndAggregateArgsAggregationType: "Aggregation type",
        OperationGroupByAndAggregateArgsAggregationTypeCount: "Count",
        OperationGroupByAndAggregateArgsAggregationTypeFirstValue: "First value",
        OperationGroupByAndAggregateArgsAggregationTypeLastValue: "Last value",
        OperationGroupByAndAggregateArgsAggregationTypeNumberOfUniqueValues: "Number of unique values",
        OperationGroupByAndAggregateArgsAggregationTypeMode: "Mode",
        OperationGroupByAndAggregateArgsAggregationTypeBooleanAll: "All values are true",
        OperationGroupByAndAggregateArgsAggregationTypeBooleanAny: "Any value is true",
        OperationGroupByAndAggregateArgsAggregationTypeMinimum: "Minimum",
        OperationGroupByAndAggregateArgsAggregationTypeMaximum: "Maximum",
        OperationGroupByAndAggregateArgsAggregationTypeIndexOfMaximum: "Index of max value",
        OperationGroupByAndAggregateArgsAggregationTypeIndexOfMinimum: "Index of min value",
        OperationGroupByAndAggregateArgsAggregationTypeSum: "Sum",
        OperationGroupByAndAggregateArgsAggregationTypeMean: "Mean",
        OperationGroupByAndAggregateArgsAggregationTypeStandardDeviation: "Standard deviation",
        OperationGroupByAndAggregateArgsAggregationTypeVariance: "Variance",
        OperationGroupByAndAggregateArgsAggregationTypeStandardErrorOfTheMean: "Standard error of the mean",
        OperationGroupByAndAggregateArgsAggregationTypeSkew: "Skew",
        OperationGroupByAndAggregateArgsAggregationTypeProductOfAllValues: "Product of all values",
        OperationGroupByAndAggregateWarningPySparkSkewBiased:
            "Skewness is biased in PySpark and may yield slightly different results.",
        OperationSelect: "Select columns",
        OperationSelectHelpText: "Selects the targeted columns from the data frame and drops all others.",
        OperationSelectDescription: "Select column: {0}",
        OperationSelectDescriptionPlural: "Select columns: {0}",
        OperationCreateColumnFromFormula: "Create column from formula",
        OperationCreateColumnFromFormulaHelpText:
            "Creates a column using a custom Python formula. This can include any expression using other columns and custom lambdas.",
        OperationCreateColumnFromFormulaDescription: "Created column {0} from formula",
        OperationCreateColumnFromFormulaModifyDescription: "Modified column {0} using formula",
        OperationCreateColumnFromFormulaArgsColumnName: "Column name",
        OperationCreateColumnFromFormulaArgsFormula: "Column formula",
        OperationArgTarget: "Target column",
        OperationArgTargetMultiselect: "Target columns",
        UnknownError: "An unknown error occurred.",
        ScaleColumnMinMaxError: "Minimum value must be smaller than maximum value.",
        FlashFillTimedOutError: "Timed out while trying to derive a program.",
        FlashFillNoProgramLearnedError: "Failed to derive a program for the given examples.",
        FlashFillTranslationFailedError: "Failed to translate the derived program to the target language.",
        FlashFillUnsupportedEngineError: "{0} is not a supported engine for derived columns.",
        FlashFillCommunicationError: "No pattern detected from inputs.",
        ColumnExistsError: "Column {0} already exists. Please choose a different name.",
        NotADataFrameError: "Expected {0} to be a DataFrame, but got: {1}",
        StripTextNothingRemovedError: "At least one option must be selected.",
        InvalidOptionForColumnError: "Option is invalid for the selected column.",
        MultipleColumnsFormat: "{0}, {1} and {2} other columns",
        OldValueEmptyError: "Old value must be non-empty.",
        RoundColumnDigitsIntError: "Number of digits must be a whole number.",
        OperationWarningCommentTemplate: "WARNING: {0}",
        OperationCompatibilityPoorPerformanceWarning:
            "This was generated to match the original {0} logic but may have performance issues."
    };
}
